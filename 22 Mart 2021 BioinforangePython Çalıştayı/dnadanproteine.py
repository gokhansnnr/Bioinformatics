# -*- coding: utf-8 -*-
"""DnadanProteine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17a12c4Tk9ts9jGn3K89Kg4DhmAwcQB_i
"""

"""
22 Mart 2021 tarihinde Bioninfoconference kapsamında gerçekleştirilen 
Python Çalıştayının 3. Kısmına ilişkin kodlar
*ornek.fasta dosyasının çalışılan dizinde olmasına özen gösterin!*
"""
# dosyadan veri alma
with open("ornek.fasta","r",encoding="utf-8") as dosya:
  liste = dosya.readlines()

# print(liste)

# liste elemanlarını stringe aktarma

dna = ""
for index in liste[1:]:
  dna += index.strip("\n")

# print(dna)

# gencode sözlüğü
gencode = {  'ATA':'I', 'ATC':'I', 'ATT':'I', 'ATG':'M','ACA':'T', 'ACC':'T', 'ACG':'T',
             'ACT':'T','AAC':'N', 'AAT':'N', 'AAA':'K', 'AAG':'K','AGC':'S', 'AGT':'S',
             'AGA':'R', 'AGG':'R','CTA':'L', 'CTC':'L', 'CTG':'L', 'CTT':'L','CCA':'P',
             'CCC':'P', 'CCG':'P', 'CCT':'P','CAC':'H', 'CAT':'H', 'CAA':'Q', 'CAG':'Q',
             'CGA':'R', 'CGC':'R','CGG':'R', 'CGT':'R','GTA':'V', 'GTC':'V', 'GTG':'V',
             'GTT':'V','GCA':'A', 'GCC':'A', 'GCG':'A', 'GCT':'A','GAC':'D', 'GAT':'D',
             'GAA':'E', 'GAG':'E','GGA':'G', 'GGC':'G', 'GGG':'G', 'GGT':'G','TCA':'S',
             'TCC':'S', 'TCG':'S', 'TCT':'S','TTC':'F', 'TTT':'F', 'TTA':'L', 'TTG':'L',
             'TAC':'Y', 'TAT':'Y', 'TAA':'*', 'TAG':'*','TGC':'C', 'TGT':'C', 'TGA':'*', 'TGG':'W'}

# Dna dizisini protein dizisine çevirme

def dnadanProteine(dna):
  sonKodonBaslangici = len(dna) -2
  protein = ""

  for index in range(0, sonKodonBaslangici, 3):
    kodon = dna.upper()[index:index+3]
    aa = gencode.get(kodon, "aminoasit dizide bulunamadı")
    protein += aa 
  
  return protein

protein = dnadanProteine(dna)

# Dosya olarak kaydetme
with open("cikti.fasta", "w", encoding="utf-8") as dosya:
  # dosya.write(">Etiket\n")
  dosya.write(liste[0])
  # dosya.write(protein)
  for index in range(0, len(protein), 70):
    satir = protein[index:index+70]
    dosya.write(satir)
    dosya.write("\n")

# Dosya işlemlerinde 70 olarak ayrılan kısmın elde edilmesi (Düzenlenmiştir.)
listeSatirBoyutu = len(liste[1])
kacisDizisiBoyutu = liste[1].count("\n")
sonuc = listeSatirBoyutu - kacisDizisiBoyutu
print(listeSatirBoyutu, "-", kacisDizisiBoyutu, "=", sonuc)